import java.text.SimpleDateFormat
import java.util.Date
plugins {
    id "com.android.application"
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file("local.properties")
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader("UTF-8") { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty("flutter.versionCode")
if (flutterVersionCode == null) {
    flutterVersionCode = "1"
}

def flutterVersionName = localProperties.getProperty("flutter.versionName")
if (flutterVersionName == null) {
    flutterVersionName = "1.0"
}

// Get current date in YYYYMMDD format
def dateFormat = new SimpleDateFormat("yyyyMMdd")
def currentDate = dateFormat.format(new Date())

println "Current date: $currentDate"

android {
    namespace = "com.fitbe.fitbeapp.fitbe"
    compileSdk = 34
    ndkVersion = flutter.ndkVersion

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId = "com.fitbe.fitbeapp.fitbe"
        // You can update the following values to match your application needs.
        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.
        minSdk = flutter.minSdkVersion
        targetSdk = flutter.targetSdkVersion
        versionCode = flutterVersionCode.toInteger()
        versionName = flutterVersionName
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig = signingConfigs.debug
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile(
                    'proguard-android-optimize.txt'),
                    'proguard-rules.pro'
//            ndk {
//                //noinspection ChromeOsAbiSupport
//                abiFilters 'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64' // includes ARM SO files only, so no x86 SO file
//            }
        }
    }

    flavorDimensions "build"
    productFlavors {
        dev {
            dimension "build"
            isDefault true
            applicationIdSuffix ".dev"
            versionNameSuffix "-dev"
            resValue "string", "app_name","Fitbit_Dev"
        }
        prod {
            dimension "build"
            resValue "string", "app_name", "MyApp"
        }
    }

    // Setting custom APK file name
    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            def formattedDate = new SimpleDateFormat("MM").format(new Date())
            def abi = output.getFilter(com.android.build.OutputFile.ABI)
            def abiSuffix = abi != null ? "-${abi}" : ""
            def outputFileName = "fitbe-${variant.flavorName}-${variant.buildType.name}-${formattedDate}-${abiSuffix}.apk"
            println "Setting output file name: $outputFileName"
            output.outputFileName = outputFileName
        }
    }

    // Ensure that APKs are split per ABI
//    splits {
//        abi {
//            enable true
//            reset()
//            include 'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64'
//            universalApk false
//        }
//    }

}

flutter {
    source = "../.."
}
